object CurrentProject: TNativeProject
  OptionsCollection = <  
    item
      name = 'posix'
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.dmdOtherOptions.Strings = (
        '-L-lX11'
        '-L-ldl'
      )
      runOptions.workingDirectory = '<CPP>'
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'windows'
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
      )
      otherOptions.guiApplication = True
      runOptions.workingDirectory = '<CPP>'
    end  
    item
      name = 'posix-unittest'
      debugingOptions.debugConditions = True
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.addMain = True
      outputOptions.unittest = True
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.dmdOtherOptions.Strings = (
        '-L-lX11'
        '-L-ldl'
      )
      runOptions.workingDirectory = '<CPP>'
      runOptions.options = [poWaitOnExit, poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'windows-unittest'
      debugingOptions.debugConditions = True
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.addMain = True
      outputOptions.unittest = True
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
      )
      runOptions.options = [poWaitOnExit, poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'posix-gl'
      debugingOptions.debugConditions = True
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.customOptions.Strings = (
        '-L-lX11'
      )
      runOptions.workingDirectory = '<CPP>'
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'posix-vulkan'
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
        'UseXCB'
        'GraphBackendVulkan'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.customOptions.Strings = (
        '-L-lxcb'
        '-L-lxcb-icccm'
        '-L-lX11'
      )
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'posix-lib-gl-debug'
      debugingOptions.debugConditions = True
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.binaryKind = staticlib
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.customOptions.Strings = (
        '-L-lX11'
      )
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'posix-lib-gl-release'
      debugingOptions.generateStackFrame = True
      outputOptions.binaryKind = staticlib
      outputOptions.boundsCheck = onAlways
      outputOptions.optimizations = True
      outputOptions.release = True
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.customOptions.Strings = (
        '-L-lX11'
      )
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end  
    item
      name = 'posix-lib-gl-debug-inspect'
      debugingOptions.debugConditions = True
      debugingOptions.debugIdentifiers.Strings = (
        'inspectApp'
      )
      debugingOptions.generateInfos = True
      debugingOptions.generateMapFile = True
      debugingOptions.generateStackFrame = True
      outputOptions.binaryKind = staticlib
      outputOptions.boundsCheck = onAlways
      outputOptions.versionIdentifiers.Strings = (
        'GL_46'
        'dglx_cached'
        'Dynamic_GLX'
      )
      pathsOptions.outputFilename = 'tida'
      pathsOptions.objectDirectory = 'objs'
      pathsOptions.extraSources.Strings = (
        '<CPP>bindbc-loader/bindbc-loader.a'
        '<CPP>bindbc-opengl/bindbc-opengl.a'
        '<CPP>bindbc-openal/bindbc-openal.a'
        '<CPP>bindbc-freetype/bindbc-freetype.a'
        '<CPP>imagefmt/imagefmt.a'
        '<CPP>mp3decoder/mp3decoder.a'
        '<CPP>SDLang-D/sdland-d.a'
        '<CPP>taggedalgebraic/taggedalgebraic.a'
        '<CPP>x11/x11.a'
      )
      pathsOptions.importModulePaths.Strings = (
        '<CPP>bindbc-loader/source'
        '<CPP>bindbc-opengl/source'
        '<CPP>bindbc-openal/source'
        '<CPP>bindbc-freetype/source'
        '<CPP>imagefmt'
        '<CPP>mp3decoder/source'
        '<CPP>taggedalgebraic/source/'
        '<CPP>SDLang-D/src/'
        '<CPP>x11/source'
      )
      otherOptions.customOptions.Strings = (
        '-L-lX11'
      )
      runOptions.options = [poUsePipes, poStderrToOutPut]
    end>
  Sources.Strings = (
    'source/dglx/glx.d'
    'source/app.d'
    'source/tida/color.d'
    'source/tida/window.d'
    'source/tida/matrix.d'
    'source/tida/image.d'
    'source/tida/vector.d'
    'source/tida/angle.d'
    'source/tida/event.d'
    'source/tida/runtime.d'
    'source/tida/algorithm.d'
    'source/tida/each.d'
    'source/tida/fps.d'
    'source/tida/collision.d'
    'source/tida/shape.d'
    'source/tida/sound.d'
    'source/tida/package.d'
    'source/tida/graphics/gapi.d'
    'source/tida/graphics/gl.d'
    'source/tida/drawable.d'
    'source/tida/render.d'
    'source/tida/meshgen.d'
    'source/tida/component.d'
    'source/tida/instance.d'
    'source/tida/localevent.d'
    'source/tida/scene.d'
    'source/tida/scenemanager.d'
    'source/tida/text.d'
    'source/tida/sprite.d'
    'source/tida/game.d'
    'source/tida/listener.d'
    'source/tida/animation.d'
    'source/tida/loader.d'
  )
  ConfigurationIndex = 4
  LibraryAliases.Strings = (
    'bindbc-loader'
    'bindbc-opengl'
    'bindbc-openal'
    'bindbc-freetype'
    'imagefmt'
    'mp3decoder'
    'sdlang'
    'x11'
    'erupted'
    'xcb-d'
  )
end
